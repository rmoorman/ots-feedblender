/**
 * Only display content to screen readers
 * see: http://a11yproject.com/posts/how-to-hide-content/
 */
@mixin sr-only()
  position: absolute
  width: 1px
  height: 1px
  margin: -1px
  padding: 0
  overflow: hidden
  clip: rect(0, 0, 0, 0)
  border: 0
.sr-only
  +sr-only

/**
 * Use in conjunction with .sr-only to only display content when it's focused.
 * Useful for "Skip to main content" links; see http://www.w3.org/TR/2013/NOTE-WCAG20-TECHS-20130905/G1
 * Credit: HTML5 Boilerplate
 */
@mixin sr-only-focusable()
  &:active,
  &:focus
    position: static
    width: auto
    height: auto
    margin: 0
    overflow: visible
    clip: auto
.sr-only-focusable
  +sr-only-focusable


/**
 * This mixin adds height and min-height declarations to provide
 * a cross-browser min-height setting.
 *
 * First the height is set to auto which is marked as important
 * for normal browsers.
 * Then the min-height setting is applied using the given height
 * and after that the height will be set using the given height.
 * This setting, however, will only take effect in browsers without
 * appropriate min-height and !important support (IE..) because of
 * the first rule (auto).
 */
@mixin min-height($height)
  height: auto !important
  min-height: $height
  height: $height

@mixin min-width($width)
  width: auto !important
  min-width: $width
  width: $width


/**
 * Adjust font size and set the line-height
 * to a predefined/given value
 */
@mixin font-size($size, $line-height: 1.5em)
  font-size: $size
  line-height: $line-height


/**
 * Defines a somehow cross-browser inline-block
 * layout for an element.
 */
@mixin inline-block()
  display: -moz-inline-stack
  display: inline-block
  zoom: 1
  *display: inline


/**
 * Float helper mixins
 */
@mixin clearfix()
  *zoom: 1
  &:before,
  &:after
    display: table
    content: ""
    line-height: 0
  &:after
    clear: both

@mixin clear()
  clear: both
  content: "."
  display: block
  font-size: 0
  height: 0
  visibility: hidden



/**
 * Retina background image helper taking two images as arguments.
 * The first argument is the original and the second argument is
 * the image to be used on higher resolutions
 */
@mixin retina-background-image($original, $x2)
  $width: image-width($original) !default
  $height: image-height($original) !default
  background-image: image-url($original)
  @if $x2
    @media (min--moz-device-pixel-ratio: 1.3), (-o-min-device-pixel-ratio: 2.6/2), (-webkit-min-device-pixel-ratio: 1.3), (min-device-pixel-ratio: 1.3), (min-resolution: 1.3dppx)
      /* on retina, use image that's scaled by 2 */
      background-image: image-url($x2)
      background-size: $width $height


@mixin fa-icon-before($var)
  +fa-icon
  &:before
    content: $var
    vertical-align: middle
